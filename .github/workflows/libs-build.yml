# This workflow builds USearch libraries and upload them as artifacts.
# Currently, for development purposes, an 'if' condition is specified below to work only on forks.
# TODO: replace branches ref in prod
# TODO: remove `if` conditions in jobs in prod
name: Build libraries

on:
  workflow_dispatch:
  push:
    branches: ["160-feature-c-bindings-and-semantic-kernel-integration"]

env:
  ARTIFACTS_RETENTION_DAYS: 7
  CHECKOUT_BRANCH: 160-feature-c-bindings-and-semantic-kernel-integration

jobs:
  make_linux_so:
    if: github.repository == 'AleksandrKent/usearch'
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3
        with:
          ref: ${{ env.CHECKOUT_BRANCH }}

      - name: Update git submodules
        run: |
          git submodule update --init --recursive

      - name: build
        run: |
          ./build_lib.sh
        working-directory: ${{ github.workspace }}/csharp/eng

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: usearch-libs
          path: ${{ github.workspace }}/csharp/lib/**/*
          retention-days: ${{ env.ARTIFACTS_RETENTION_DAYS }}

  make_macos_dylib:
    if: github.repository == 'AleksandrKent/usearch'
    strategy:
      matrix:
        os: [macos-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Install/Upgrade bash on macOS
        run: brew install bash

      - name: Checkout git repo
        uses: actions/checkout@v3
        with:
          ref: ${{ env.CHECKOUT_BRANCH }}

      - name: Update git submodules
        run: |
          git submodule update --init --recursive

      - name: build
        run: |
          ./build_lib.sh
        working-directory: ${{ github.workspace }}/csharp/eng

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: usearch-libs
          path: ${{ github.workspace }}/csharp/lib/**/*
          retention-days: ${{ env.ARTIFACTS_RETENTION_DAYS }}

  make_windows_dll:
    if: github.repository == 'AleksandrKent/usearch'
    strategy:
      matrix:
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3
        with:
          ref: ${{ env.CHECKOUT_BRANCH }}

      - name: Update git submodules
        run: |
          git submodule update --init --recursive
        shell: cmd

      - name: Custom MSVC build
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          where cl
          cl /EHsc /std:c++14 /O2 /LD /Fe:libusearch_c.dll lib.cpp /I. /I../include/ /I../fp16/include/ /I../robin-map/include/
        working-directory: ${{ github.workspace }}/c
        shell: cmd

      - name: Copy dll
        run: |
          mkdir -p "${GITHUB_WORKSPACE}/csharp/lib/runtimes/win-x64/native"
          cp "${GITHUB_WORKSPACE}/c/libusearch_c.dll" "${GITHUB_WORKSPACE}/csharp/lib/runtimes/win-x64/native"
        shell: bash

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: usearch-libs
          path: ${{ github.workspace }}/csharp/lib/**/*
          retention-days: ${{ env.ARTIFACTS_RETENTION_DAYS }}

  download_and_display:
    if: github.repository == 'AleksandrKent/usearch'
    runs-on: ${{ matrix.os }}
    needs: [make_windows_dll, make_macos_dylib, make_linux_so]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.CHECKOUT_BRANCH }}
      - run: |
          git submodule update --init --recursive
        shell: bash

      - name: Download artifacts
        uses: actions/download-artifact@v3.0.2
        with:
          path: ${{ github.workspace }}/csharp/lib

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: ${{ github.workspace }}/csharp/lib
