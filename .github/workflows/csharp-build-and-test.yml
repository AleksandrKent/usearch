# This workflow builds the USearch native libraries, then builds and tests the C# USearch wrapper.
# Currently, for development purposes, an 'if' condition is specified below to work only on forks.
# TODO: replace branches ref in prod
# TODO: remove `if` conditions in jobs in prod
name: Test C#

# on: workflow_dispatch
on:
  push:
    branches: ["160-feature-c-bindings-and-semantic-kernel-integration"]

env:
  CHECKOUT_BRANCH: 160-feature-c-bindings-and-semantic-kernel-integration

jobs:
  matrix-test:
    if: github.repository == 'AleksandrKent/usearch'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.CHECKOUT_BRANCH }}
      - run: |
          git submodule update --init --recursive
        shell: bash

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      # Ubuntu and macOS steps
      - name: Build native lib on Ubuntu or macOS
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: |
          ./build_lib.sh
        shell: bash
        working-directory: ${{ github.workspace }}/csharp/eng/

      # Windows steps

      # Use cl.exe https://www.appveyor.com/docs/lang/cpp/#visual-studio-2017
      - name: Custom MSVC build
        if: matrix.os == 'windows-latest'
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          where cl
          cl /EHsc /std:c++14 /O2 /LD /Fe:libusearch_c.dll lib.cpp /I. /I../include/ /I../fp16/include/ /I../robin-map/include/
        working-directory: ${{ github.workspace }}/c
        shell: cmd

      - name: Copy dll on Windows to lib dir
        if: matrix.os == 'windows-latest'
        run: |
          mkdir -p "${GITHUB_WORKSPACE}/csharp/lib/runtimes/win-x64/native"
          cp "${GITHUB_WORKSPACE}/c/libusearch_c.dll" "${GITHUB_WORKSPACE}/csharp/lib/runtimes/win-x64/native"
        shell: bash

      - name: Dotnet build
        run: dotnet build -c Release
        shell: bash
        working-directory: ${{ github.workspace }}/csharp/

      - name: Dotnet test
        run: dotnet test -c Release --no-build
        shell: bash
        working-directory: ${{ github.workspace }}/csharp/
